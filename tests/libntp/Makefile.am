NULL =
BUILT_SOURCES =
CLEANFILES =

run_unity =	cd $(srcdir) && ruby ../../sntp/unity/auto/generate_test_runner.rb

#removed test-libntp
check_PROGRAMS =		\
	test-a_md5encrypt	\
	test-atoint			\
	test-atouint		\
	test-authkeys		\
	test-calendar		\
	test-caljulian		\
	test-caltontp		\
	test-calyearstart	\
	test-clocktime		\
	test-decodenetnum	\
	test-hextoint		\
	test-hextolfp		\
	test-lfpfunc		\
	test-modetoa		\
	test-msyslog		\
	test-netof			\
	test-numtoa			\
	test-numtohost		\
	test-octtoint		\
	test-prettydate		\
	test-recvbuff		\
	test-refnumtoa		\
	test-ssl_init		\
	test-socktoa		\
	test-statestr		\
	test-timespecops	\
	test-timevalops		\
	test-tstotv			\
	test-uglydate		\
	test-vi64ops		\
	test-ymd2yd			\
	$(NULL)

if GTEST_AVAILABLE
check_PROGRAMS += tests
else
EXTRA_PROGRAMS = tests
endif

LDADD =					\
	$(top_builddir)/libntp/libntp.a	\
	$(LDADD_LIBNTP)			\
	$(PTHREAD_LIBS)			\
	$(LDADD_NTP)			\
	$(LIBM)				\
	$(NULL)

tests_LDADD =				\
	$(LDADD)			\
	$(GTEST_LDFLAGS)		\
	$(GTEST_LIBS)			\
	$(NULL)

unity_tests_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

AM_CFLAGS   = $(CFLAGS_NTP)
AM_CXXFLAGS = $(GTEST_CXXFLAGS)

AM_CPPFLAGS  = $(NTP_INCS)
AM_CPPFLAGS += -I$(top_srcdir)/sntp
AM_CPPFLAGS += $(GTEST_CPPFLAGS)
AM_CPPFLAGS += $(CPPFLAGS_NTP)

AM_LDFLAGS = $(LDFLAGS_NTP)

tests_SOURCES =					\
	$(top_srcdir)/sntp/tests_main.cpp	\
	libntptest.cpp		\
	g_a_md5encrypt.cpp	\
	g_atoint.cpp		\
	g_atouint.cpp		\
	g_authkeys.cpp		\
	buftvtots.cpp		\
	g_calendar.cpp		\
	g_caljulian.cpp		\
	g_caltontp.cpp		\
	g_calyearstart.cpp	\
	g_clocktime.cpp		\
	g_decodenetnum.cpp	\
	g_hextoint.cpp		\
	g_hextolfp.cpp		\
	humandate.cpp		\
	g_lfpfunc.cpp		\
	lfptostr.cpp		\
	g_modetoa.cpp		\
	g_msyslog.cpp		\
	g_netof.cpp			\
	g_numtoa.cpp		\
	g_numtohost.cpp		\
	g_octtoint.cpp		\
	g_prettydate.cpp	\
	g_recvbuff.cpp		\
	g_refnumtoa.cpp		\
	sfptostr.cpp		\
	g_socktoa.cpp		\
	g_ssl_init.cpp		\
	g_statestr.cpp		\
	strtolfp.cpp		\
	g_timespecops.cpp	\
	timestructs.cpp		\
	g_timevalops.cpp	\
	g_tstotv.cpp			\
	tvtots.cpp			\
	g_uglydate.cpp		\
	g_vi64ops.cpp		\
	g_ymd2yd.cpp		\
	$(NULL)

BUILT_SOURCES +=			\
	$(srcdir)/run-a_md5encrypt.c	\
	$(srcdir)/run-atoint.c		\
	$(srcdir)/run-atouint.c		\
	$(srcdir)/run-authkeys.c	\
	$(srcdir)/run-caljulian.c	\
	$(srcdir)/run-caltontp.c
	$(srcdir)/run-calyearstart.c	\
	$(srcdir)/run-clocktime.c	\
	$(srcdir)/run-decodenetnum.c	\
	$(srcdir)/run-hextoint.c	\
	$(srcdir)/run-hextolfp.c	\
	$(srcdir)/run-lfpfunc.c		\
	$(srcdir)/run-modetoa.c		\
	$(srcdir)/run-msyslog.c		\
	$(srcdir)/run-netof.c		\
	$(srcdir)/run-numtoa.c		\
	$(srcdir)/run-numtohost.c	\
	$(srcdir)/run-octtoint.c	\
	$(srcdir)/run-prettydate.c	\
	$(srcdir)/run-recvbuff.c	\
	$(srcdir)/run-refnumtoa.c	\
	$(srcdir)/run-ssl_init.c	\
	$(srcdir)/run-socktoa.c		\
	$(srcdir)/run-statestr.c	\
	$(srcdir)/run-timevalops.c	\
	$(srcdir)/run-timespecops.c	\
	$(srcdir)/run-tstotv.c		\
	$(srcdir)/run-uglydate.c	\
	$(srcdir)/run-vi64ops.c		\
	$(srcdir)/run-ymd2yd.c		\
	$(srcdir)/run-calendar.c	\
	$(NULL)

noinst_HEADERS =	\
	lfptest.h	\
	c_lfptest.h	\
	libntptest.h	\
	sockaddrtest.h	\
	c_sockaddrtest.h	\
	timestructs.h	\
	test-libntp.h	\
	$(NULL)

#$(srcdir)/run-libntp.c: $(srcdir)/test-libntp.c $(std_unity_list)
#	$(run_unity) test-libntp.c run-libntp.c

#test_libntp_CFLAGS =			\
#	-I$(top_srcdir)/sntp/unity	\
#	$(NULL)

#test_libntp_LDADD =				\
#	$(LDADD)				\
#	$(top_builddir)/sntp/unity/libunity.a	\
#	$(NULL)

test_modetoa_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_modetoa_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_uglydate_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_uglydate_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_ymd2yd_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_ymd2yd_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_statestr_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_statestr_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_numtoa_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_numtoa_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_numtohost_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_numtohost_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_hextoint_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_hextoint_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_atoint_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_atoint_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_octtoint_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_octtoint_LDADD =			\
	$(unity_tests_LDADD)		\
	$(NULL)

test_hextolfp_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_hextolfp_LDADD =			\
	$(unity_tests_LDADD)		\
	$(NULL)

test_netof_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_netof_LDADD =			\
	$(unity_tests_LDADD)		\
	$(NULL)

test_decodenetnum_CFLAGS =		\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_decodenetnum_LDADD =		\
	$(unity_tests_LDADD)		\
	-lpthread			\
	$(NULL)

test_socktoa_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity	\
	$(NULL)

test_socktoa_LDADD =			\
	$(unity_tests_LDADD)		\
	$(NULL)

test_a_md5encrypt_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_a_md5encrypt_LDADD =			\
	$(unity_tests_LDADD)			\
	$(NULL)

test_atouint_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_atouint_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_authkeys_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_authkeys_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_lfpfunc_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	-DUNITY_INCLUDE_DOUBLE			\
	$(NULL)

test_lfpfunc_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_vi64ops_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_vi64ops_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_refnumtoa_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_refnumtoa_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_calyearstart_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_calyearstart_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_clocktime_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_clocktime_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_caljulian_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_caljulian_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	-lpthread				\
	$(NULL)

test_calendar_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_calendar_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_timevalops_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_timevalops_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_timespecops_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_timespecops_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_ssl_init_CFLAGS =				\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_ssl_init_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_caltontp_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_caltontp_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_msyslog_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_msyslog_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_prettydate_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_prettydate_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_recvbuff_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_recvbuff_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)

test_tstotv_CFLAGS =			\
	-I$(top_srcdir)/sntp/unity		\
	$(NULL)

test_tstotv_LDADD =			\
	$(LDADD)				\
	$(top_builddir)/sntp/unity/libunity.a	\
	$(NULL)


test_modetoa_SOURCES =			\
	modetoa.c			\
	run-modetoa.c			\
	$(NULL)

test_uglydate_SOURCES =			\
	uglydate.c			\
	run-uglydate.c			\
	$(NULL)

test_ymd2yd_SOURCES =			\
	ymd2yd.c			\
	run-ymd2yd.c			\
	$(NULL)

test_statestr_SOURCES =			\
	statestr.c			\
	run-statestr.c			\
	$(NULL)

test_numtoa_SOURCES =			\
	numtoa.c			\
	run-numtoa.c			\
	$(NULL)

test_numtohost_SOURCES =		\
	numtohost.c			\
	run-numtohost.c			\
	$(NULL)

test_hextoint_SOURCES =			\
	hextoint.c			\
	run-hextoint.c			\
	$(NULL)

test_atoint_SOURCES =			\
	atoint.c			\
	run-atoint.c			\
	$(NULL)

test_a_md5encrypt_SOURCES =		\
	a_md5encrypt.c			\
	run-a_md5encrypt.c		\
	$(NULL)

test_octtoint_SOURCES =			\
	octtoint.c			\
	run-octtoint.c			\
	$(NULL)

test_hextolfp_SOURCES =			\
	hextolfp.c			\
	run-hextolfp.c			\
	$(NULL)

test_netof_SOURCES =			\
	netof.c				\
	run-netof.c			\
	$(NULL)

test_decodenetnum_SOURCES =		\
	decodenetnum.c			\
	run-decodenetnum.c		\
	$(NULL)

test_socktoa_SOURCES =			\
	socktoa.c			\
	run-socktoa.c			\
	$(NULL)

test_atouint_SOURCES =			\
	atouint.c			\
	run-atouint.c			\
	$(NULL)

test_authkeys_SOURCES =			\
	authkeys.c			\
	run-authkeys.c			\
	$(NULL)

test_lfpfunc_SOURCES =			\
	lfpfunc.c			\
	run-lfpfunc.c			\
	$(NULL)

test_vi64ops_SOURCES =			\
	vi64ops.c			\
	run-vi64ops.c			\
	$(NULL)

test_refnumtoa_SOURCES =		\
	refnumtoa.c			\
	run-refnumtoa.c			\
	$(NULL)

test_calyearstart_SOURCES =		\
	calyearstart.c			\
	run-calyearstart.c		\
	test-libntp.c			\
	$(NULL)

test_clocktime_SOURCES =		\
	clocktime.c			\
	run-clocktime.c			\
	test-libntp.c			\
	$(NULL)

test_caljulian_SOURCES =		\
	caljulian.c			\
	run-caljulian.c			\
	test-libntp.c			\
	$(NULL)

test_calendar_SOURCES =			\
	calendar.c			\
	run-calendar.c			\
	test-libntp.c			\
	$(NULL)

test_timevalops_SOURCES =		\
	timevalops.c			\
	run-timevalops.c		\
	$(NULL)

test_timespecops_SOURCES =		\
	timespecops.c			\
	run-timespecops.c		\
	$(NULL)

test_ssl_init_SOURCES =			\
	ssl_init.c			\
	run-ssl_init.c			\
	$(NULL)

test_caltontp_SOURCES =			\
	caltontp.c			\
	run-caltontp.c			\
	$(NULL)

test_msyslog_SOURCES =			\
	msyslog.c			\
	run-msyslog.c			\
	$(NULL)

test_prettydate_SOURCES =			\
	prettydate.c			\
	run-prettydate.c			\
	$(NULL)

test_recvbuff_SOURCES =			\
	recvbuff.c			\
	run-recvbuff.c			\
	$(NULL)

test_tstotv_SOURCES =			\
	tstotv.c			\
	run-tstotv.c			\
	$(NULL)

$(srcdir)/run-modetoa.c: $(srcdir)/modetoa.c $(std_unity_list)
	$(run_unity) modetoa.c run-modetoa.c

$(srcdir)/run-uglydate.c: $(srcdir)/uglydate.c $(std_unity_list)
	$(run_unity) uglydate.c run-uglydate.c

$(srcdir)/run-ymd2yd.c: $(srcdir)/ymd2yd.c $(std_unity_list)
	$(run_unity) ymd2yd.c run-ymd2yd.c

$(srcdir)/run-statestr.c: $(srcdir)/statestr.c $(std_unity_list)
	$(run_unity) statestr.c run-statestr.c

$(srcdir)/run-numtoa.c: $(srcdir)/numtoa.c $(std_unity_list)
	$(run_unity) numtoa.c run-numtoa.c

$(srcdir)/run-numtohost.c: $(srcdir)/numtohost.c $(std_unity_list)
	$(run_unity) numtohost.c run-numtohost.c

$(srcdir)/run-hextoint.c: $(srcdir)/hextoint.c $(std_unity_list)
	$(run_unity) hextoint.c run-hextoint.c

$(srcdir)/run-atoint.c: $(srcdir)/atoint.c $(std_unity_list)
	$(run_unity) atoint.c run-atoint.c

$(srcdir)/run-octtoint.c: $(srcdir)/octtoint.c $(std_unity_list)
	$(run_unity) octtoint.c run-octtoint.c

$(srcdir)/run-hextolfp.c: $(srcdir)/hextolfp.c $(std_unity_list)
	$(run_unity) hextolfp.c run-hextolfp.c

$(srcdir)/run-netof.c: $(srcdir)/netof.c $(std_unity_list)
	$(run_unity) netof.c run-netof.c

$(srcdir)/run-decodenetnum.c: $(srcdir)/decodenetnum.c $(std_unity_list)
	$(run_unity) decodenetnum.c run-decodenetnum.c

$(srcdir)/run-socktoa.c: $(srcdir)/socktoa.c $(std_unity_list)
	$(run_unity) socktoa.c run-socktoa.c

$(srcdir)/run-a_md5encrypt.c: $(srcdir)/a_md5encrypt.c $(std_unity_list)
	$(run_unity) a_md5encrypt.c run-a_md5encrypt.c

$(srcdir)/run-atouint.c: $(srcdir)/atouint.c $(std_unity_list)
	$(run_unity) atouint.c run-atouint.c

$(srcdir)/run-authkeys.c: $(srcdir)/authkeys.c $(std_unity_list)
	$(run_unity) authkeys.c run-authkeys.c

$(srcdir)/run-lfpfunc.c: $(srcdir)/lfpfunc.c $(std_unity_list)
	$(run_unity) lfpfunc.c run-lfpfunc.c

$(srcdir)/run-vi64ops.c: $(srcdir)/vi64ops.c $(std_unity_list)
	$(run_unity) vi64ops.c run-vi64ops.c

$(srcdir)/run-refnumtoa.c: $(srcdir)/refnumtoa.c $(std_unity_list)
	$(run_unity) refnumtoa.c run-refnumtoa.c

$(srcdir)/run-calyearstart.c: $(srcdir)/calyearstart.c $(std_unity_list)
	$(run_unity) calyearstart.c run-calyearstart.c

$(srcdir)/run-clocktime.c: $(srcdir)/clocktime.c $(std_unity_list)
	$(run_unity) clocktime.c run-clocktime.c

$(srcdir)/run-caljulian.c: $(srcdir)/caljulian.c $(std_unity_list)
	$(run_unity) caljulian.c run-caljulian.c

$(srcdir)/run-calendar.c: $(srcdir)/calendar.c $(std_unity_list)
	$(run_unity) calendar.c run-calendar.c

$(srcdir)/run-timevalops.c: $(srcdir)/timevalops.c $(std_unity_list)
	$(run_unity) timevalops.c run-timevalops.c

$(srcdir)/run-timespecops.c: $(srcdir)/timespecops.c $(std_unity_list)
	$(run_unity) timespecops.c run-timespecops.c

$(srcdir)/run-ssl_init.c: $(srcdir)/ssl_init.c $(std_unity_list)
	$(run_unity) ssl_init.c run-ssl_init.c

$(srcdir)/run-caltontp.c: $(srcdir)/caltontp.c $(std_unity_list)
	$(run_unity) caltontp.c run-caltontp.c

$(srcdir)/run-msyslog.c: $(srcdir)/msyslog.c $(std_unity_list)
	$(run_unity) msyslog.c run-msyslog.c

$(srcdir)/run-prettydate.c: $(srcdir)/prettydate.c $(std_unity_list)
	$(run_unity) prettydate.c run-prettydate.c

$(srcdir)/run-recvbuff.c: $(srcdir)/recvbuff.c $(std_unity_list)
	$(run_unity) recvbuff.c run-recvbuff.c

$(srcdir)/run-tstotv.c: $(srcdir)/tstotv.c $(std_unity_list)
	$(run_unity) tstotv.c run-tstotv.c


TESTS =

if !NTP_CROSSCOMPILE
TESTS += $(check_PROGRAMS)
endif

## check-libntp.mf - automake fragment
## slightly adapted for deeper directory

BUILT_SOURCES	+= check-libntp check-libunity
CLEANFILES	+= check-libntp check-libunity

check-libntp: ../../libntp/libntp.a
	@echo stamp > $@

../../libntp/libntp.a:
	cd ../../libntp && $(MAKE) $(AM_MAKEFLAGS) libntp.a

check-libunity: ../../sntp/unity/libunity.a
	@echo stamp > $@

../../sntp/unity/libunity.a:
	cd ../../libunity && $(MAKE) $(AM_MAKEFLAGS) libunity.a

include $(top_srcdir)/depsver.mf
include $(top_srcdir)/includes.mf
