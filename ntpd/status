ntp_request.c:	ik->offset = htonl((u_int32)ntx.offset);
ntp_request.c:	ik->freq = htonl((u_int32)ntx.freq);
ntp_request.c:	ik->maxerror = htonl((u_int32)ntx.maxerror);
ntp_request.c:	ik->esterror = htonl((u_int32)ntx.esterror);
ntp_request.c:	ik->status = htons(ntx.status);
ntp_request.c:	ik->constant = htonl((u_int32)ntx.constant);
ntp_request.c:	ik->precision = htonl((u_int32)ntx.precision);
ntp_request.c:	ik->tolerance = htonl((u_int32)ntx.tolerance);
ntp_request.c:	ik->ppsfreq = htonl((u_int32)ntx.ppsfreq);
ntp_request.c:	ik->jitter = htonl((u_int32)ntx.jitter);
ntp_request.c:	ik->shift = htons(ntx.shift);
ntp_request.c:	ik->stabil = htonl((u_int32)ntx.stabil);
ntp_request.c:	ik->jitcnt = htonl((u_int32)ntx.jitcnt);
ntp_request.c:	ik->calcnt = htonl((u_int32)ntx.calcnt);
ntp_request.c:	ik->errcnt = htonl((u_int32)ntx.errcnt);
ntp_request.c:	ik->stbcnt = htonl((u_int32)ntx.stbcnt);
ntp_request.c~:	ik->offset = htonl((u_int32)ntx.offset);
ntp_request.c~:	ik->freq = htonl((u_int32)ntx.freq);
ntp_request.c~:	ik->maxerror = htonl((u_int32)ntx.maxerror);
ntp_request.c~:	ik->esterror = htonl((u_int32)ntx.esterror);
ntp_request.c~:	ik->status = htons(ntx.status);
ntp_request.c~:	ik->constant = htonl((u_int32)ntx.constant);
ntp_request.c~:	ik->precision = htonl((u_int32)ntx.precision);
ntp_request.c~:	ik->tolerance = htonl((u_int32)ntx.tolerance);
ntp_request.c~:	ik->ppsfreq = htonl((u_int32)ntx.ppsfreq);
ntp_request.c~:	ik->jitter = htonl((u_int32)ntx.jitter);
ntp_request.c~:	ik->shift = htons(ntx.shift);
ntp_request.c~:	ik->stabil = htonl((u_int32)ntx.stabil);
ntp_request.c~:	ik->jitcnt = htonl((u_int32)ntx.jitcnt);
ntp_request.c~:	ik->calcnt = htonl((u_int32)ntx.calcnt);
ntp_request.c~:	ik->errcnt = htonl((u_int32)ntx.errcnt);
ntp_request.c~:	ik->stbcnt = htonl((u_int32)ntx.stbcnt);
