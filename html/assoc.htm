<HTML><TITLE>
Association Management
</TITLE></HEAD><BODY><H3>
Association Management
</H3><HR>

<H4>Association Modes</H4>

The NTP Version 4 incorporates new features and refinements to the NTP
Version 3 (NTPv3) algorithms. However, it continues the tradition of
retaining backwards compatibility with older versions. However, a number
of new features have been implemented, including a number of new
operating modes for automatic server discovery and improved accuracy in
occasionally-connected networks. Following is an extended abstract
describing the new features. Additional information is available on the
<a href=confopt.htm>Configuration Options</a> page..

<P>An ephemeral association of some mode is mobilized when a message
arrives from a server or peer. For instance, a symmetric-passive
association is mobilized upon arrival of a message from a symmetric-
active peer. A client association is mobilized upon arrival of a
broadcast message from a multicast server or a server message from a
manycast server. Ordinarily, successful mobilization requires the server
or peer provide acceptable cryptographic credentials, either using
traditional symmetric-key cryptography or public-key cryptography new to
NTPv4. Ephemeral associations are demobilized when either (a) the server
becomes unreachable or (b) the server refreshes key media without
notifying the client.

<P>Following is a summary of the protocol operations for each mode.

<P>Symmetric Modes (Active and Passive)

<UL>In these modes, two client/server peers agree to back each other up,
should the synchronization source for either peer fail. One or both
peers is configured in symmetric-active mode using the <tt>peer</tt>
command. Alternatively, one - the active peer - is configured in this
mode and the other, the passive peer, operates in symmetric-passive mode
and requires no prior configuration. Both association scenarios operate
in NTPv4 as in NTPv3; however, several bugs in the handling of keys and
recovery of resources when an active peer fails have been corrected in
NTPv4. The original NTPv3 authentication scheme is applicable in this
mode, as well as the new NTPv3 autokey scheme.</UL>

Client/Server Modes

<UL>In these modes, a client sends a request to the server and expects a
reply at some future time. The client is configured in client mode using
the <tt>server</tt> (sic) command; the server requires no prior
configuration. The original NTPv3 authentication scheme is applicable in
this mode, as well as the new NTPv3 autokey scheme. In addition, the
burst modes described below can be used in appropriate cases.</UL>

Broadcast/Multicast Modes

<UL>In these modes, the server generates messages at intervals specified
by the <tt>minpoll</tt> keyword to the configuration command. When using
IP multicast addresses, the scope of the multicast tree is specified by
the <tt>ttl</tt> keyword in hops. When using a local interface broadcast
address, the scope is limited to the attached subnet. The client
responds to the first message received by waiting an interval randomized
over the <tt>minpoll</tt> interval, in order to avoid implosions. Then,
it polls the server in burst mode in order to accumulate data to
reliably set the host clock. This normally results in eight
client/server cycles over a 30-s interval. When the next multicast
message is received, the client computes the offset between the system
clock just set and the apparent time of the multicast message in order
to correct the apparent time in future multicast messages.</UL>

Manycast Mode

<UL>In this mode, a configured client broadcasts a request message as in
client mode to a designated multicast group address. All servers
configured as manycast servers and in <tt>ttl</tt> range respond with a
server reply message. Each reply mobilizes a persistent client/server
association as in client mode. Then, the NTP intersection and clustering
algorithms act to discard all but the "best" of these associations,
which then continue as in client/server mode.

<p>The above scenario happens at each manycast message; however, once
the persisten association has been mobilized, subsequent server replies
are discarded, since they fail one or more of the authentication checks.
It is important in manycast mode to avoid frequeny request messages,
since each one requires all manycast servers in range to respond. The
result could well be an implosion, either minor or major, depending on
the number of servers in range.</UL>

<H4>Burst Modes</H4>

<p>There are two burst modes that can be activated for client/server
mode. One of these <tt>iburst</tt> is intended for cases where it is
important to set the clock quickly when an association is first
mobilized. It results in good accuracy with intermittent connections
typical of PPP and ISDN services. When enabled, at each poll interval
the client sends eight messages over the next 30-s and processes them in
a batch. However, the interval between the first and subsequent messages
is about 20 s in order for a dialup modem to complete the call. Outlyers
due to initial dial-up delays, etc., are avoided and the client sets the
clock within 30 s after the first message.</LI>

<p>The other burst mode <tt>burst</tt> can be configured when the
network attachment requires an initial calling or training procedure.
Each poll initiates a burst of eight request messages at intervals
randomized over the range 3-5 s. The reply messages update the clock
filter, which then selects the best (most accurate) among them. When the
last reply in the burst is sent, the next reply updates the client
variables and system clock in the usual manner, as if only a single
request/reply cycle had occurred. This mode does produce additional
network overhead and can cause trouble if used indiscriminately. It
should only be used where the poll interval is expected to settle to
values above 1024 s.


<hr><a href=index.htm><img align=left src=pic/home.gif></a><address><a
href=mailto:mills@udel.edu> David L. Mills &lt;mills@udel.edu&gt;</a>
</address></a></body></html>
