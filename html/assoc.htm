<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>Association Management</title>
</head>
<body>
<h3>Association Management</h3>

<img align="left" src="pic/alice51.gif" alt="gif"><a href=
"http://www.eecis.udel.edu/~mills/pictures.htm">from <i>Alice's
Adventures in Wonderland</i>, Lewis Carroll</a> 

<p>Make sure who your friends are.<br clear="left">
</p>

<hr>
<h4>Association Modes</h4>

<p>NTP Version 4 (NTPv4) incorporates new features and refinements
to the NTP Version 3 (NTPv3) algorithms; however, it continues the
tradition of backwards compatibility with older versions. A number
of new operating modes for automatic server discovery and improved
accuracy in occasionally connected networks are provided. Following
is an overview of the new features; additional information is
available on the <a href="confopt.htm">Configuration Options</a>
and <a href="authopt.htm">Authentication Options</a> pages and in
the papers, reports, memoranda and briefings at <a href=
"http://www.ntp.org">www.ntp.org</a>.</p>

<p>There are two types of associations: persistent associations,
which result from configuration file commands, and ephemeral
associations, which result from protocol operations described
below. A persistent association is never demobilized, although it
may become dormant when the associated server becomes unreachable.
An ephemeral association is mobilized when a message arrives from a
server; for instance, a symmetric passive association is mobilized
upon arrival of a symmetric active message. A broadcast client
association is mobilized upon arrival of a broadcast server
message, while a manycast client association is mobilized upon
arrival of a manycast server message.</p>

<p>Ordinarily, successful mobilization of an ephemeral association
requires the server to be cryptographically authenticated to the
dependent client. This can be done using either symmetric-key or
public-key cryptography, as described in the <a href="authopt.htm">
Authentication Options</a> page. The cryptographic means insure an
unbroken chain of trust between the dependent client and the
primary servers at the root of the synchronization subnet. We call
this chain the provenance of the client and define new vocabulary
as to proventicate a client or provide proventic credentials. Once
mobilized, ephemeral associations are demobilized when either (a)
the server becomes unreachable or (b) the server refreshes the key
media without notifying the client.</p>

<p>There are three principal modes of operation: client/server,
symmetric active/passive and broadcast. In addition, there are two
modes using IP Multicast support: multicast and manycast. These
modes are selected based on the scope of service, intended flow of
time and proventic values and means of configuration. Following is
a summary of the operations in each mode.</p>

<h4>Client/Server Mode</h4>

<p>Client/server mode is probably the most common configuration in
the Internet today. It operates in the classic
remote-procedure-call (RPC) paradigm with stateless servers. In
this mode a client sends a request to the server and expects a
reply at some future time. In some contexts this would be described
as a "pull" operation, in that the client pulls the time and
proventic values from the server. A client is configured in client
mode using the <tt>server</tt> (sic) command and specifying the
server DNS name or address; the server requires no prior
configuration. The original NTPv3 authentication scheme is
applicable in this mode, as well as the new NTPv4 Autokey
proventication scheme. In addition, two burst modes described below
can be used in appropriate cases.</p>

<h4>Symmetric Active/Passive Mode</h4>

<p>Symmetric active/passive mode is intended for configurations
were a clique of low-stratum peers operate as mutual backups for
each other. Each peer operates with one or more primary reference
sources, such as a radio clock, or a subset of secondary servers
known to be reliable and proventicated. Should one of the peers
lose all reference sources or simply cease operation, the other
peers will automatically reconfigure so that time and
proventication values can flow from the surviving peers to all the
others in the clique. In some contexts this would be described as a
"push-pull" operation, in that the peer either pulls or pushes the
time and proventic values depending on the particular
configuration.</p>

<p>Symmetric peers operate with their sources in some NTP mode and
with each other in symmetric mode. A peer is configured in
symmetric active mode using the <tt>peer</tt> command and
specifying the other peer DNS name or address. The other peer can
also be configured in symmetric active mode in a similar way.
However, if the other peer is not specifically configured in this
way, a symmetric passive association is mobilized upon arrival of a
symmetric active message. Since an intruder can impersonate a
symmetric active peer and inject false time values, symmetric mode
should always be cryptographically validated. The original NTPv3
authentication scheme is applicable in this mode, as well as the
new NTPv4 Autokey proventication scheme.</p>

<h4>Broadcast Mode</h4>

<p>Broadcast mode is intended for configurations involving one or a
few servers and a possibly very large client population. A
broadcast server is configured using the <tt>broadcast</tt> command
and a local subnet address. A broadcast client is configured using
the <tt>broadcastclient</tt> command, in which case it responds to
broadcast messages received on any interface. Since an intruder can
impersonate a broadcast server and inject false time values, this
mode should always be cryptographically validated. The original
NTPv3 authentication scheme is applicable in this mode, as well as
the new NTPv4 Autokey proventication scheme.</p>

<p>The server generates broadcast messages continuously at
intervals specified by the <tt>minpoll</tt> keyword and with a
time-to-live span specified by the <tt>ttl</tt> keyword. A NTPv4
broadcast client responds to the first proventicated message
received by waiting an interval randomized over the <tt>
minpoll</tt> interval, in order to avoid implosion at the server.
Then, the client polls the server in burst mode in order to
reliably set the host clock and validate the source. This normally
results in a volley of eight client/server cycles over a 30-s
interval during which both the synchronization and cryptographic
protocols run concurrently. When the next broadcast message is
received after the volley, the client computes the offset between
the apparent broadcast time and the (unicast) client time. This
offset is used to compensate for the propagation time between the
broadcast server and client. Once the offset is computed, the
server continues as before and the client sends no further
messages.</p>

<h4>IP Broadcast Mode</h4>

<p>Broadcast mode in both NTPv3 and NTPv4 is limited to directly
connected subnets such as Ethernets which support broadcast
technology. Ordinarily, this technology does not operate beyond the
first hop router or gateway. Where service is intended beyond the
local subnet, IP multicasting can be used where supported by the
operating system and the routers support the Internet Group
Management Protocol (IGMP). Most current kernels and available
routers do support IP multicast technology, although service
providers are sometimes reluctant to deploy it.</p>

<h4>IP Multicast Support</h4>

<p>A general discussion of IP multicast technology is beyond the
scope here. In simple terms a host or router sending to a IP
multicast group (class D) address expects all hosts or routers
listening on this address to receive the message. There is no
intrinsic limit on the number of senders or receivers and senders
can be receivers and vice versa. The IANA has assigned multicast
group address 224.0.1.1 to NTP, but this address should be used
only where the multicast span can be reliably constrained to
protect neighbor networks. In general, administratively scoped
group addresses should be used, as described in RFC-2365, or GLOP
group addresses, as described in RFC-2770.</p>

<h4>Multicasting</h4>

<p>Multicasting can be used to extend the scope of a timekeeping
subnet in two ways: multicasting and manycasting. A multicast
client is configured using the <tt>broadcast</tt> command, but with
a multicast group (class D) address instead of a local subnet
broadcast address. However, there is a subtle difference between
broadcasting and multicasting. Broadcasting is specific to each
interface and local subnet address. If more than one interface is
attached to a machine, a separate <tt>broadcast</tt> command
applies to each one separately. This provides a way to limit
exposure in a firewall, for example.</p>

<p>IP multicasting is a different paradigm. A multicast message has
the same format as a broadcast message and is configured with the
same <tt>broadcast</tt> command, but with a multicast group address
instead of a local subnet address. By design, multicast messages
travel from the sender via a shortest-path or shared tree to the
receivers, which may require these messages emit from one or all
interfaces, but carry a common source address. However, it is
possible to configure multiple multicast group addresses using
multiple <tt>broadcast</tt> commands. Other than these particulars,
multicast messages are processed just like broadcast messages. Note
that the calibration feature in broadcast mode is extremely
important, since IP multicast messages can travel far different
paths through the IP routing fabric than ordinary IP unicast
messages.</p>

<h4>Manycasting</h4>

<p>Manycasting is a automatic discovery and configuration paradigm
new to NTPv4. It is intended as a means for a multicast client to
troll the nearby network neighborhood to find cooperating manycast
servers, validate them using cryptographic means and evaluate their
time values with respect to other servers that might be lurking in
the vicinity. The intended result is that each manycast client
mobilizes client associations with some number of the "best" of the
nearby manycast servers, yet automatically reconfigures to sustain
this number of servers should one or another fail. Additional
information is on the <a href="manyopt.htm">Automatic NTP
Configuration Options</a> page.</p>

<h4>Burst Modes</h4>

<p>There are two burst modes where a single poll triggers a burst
of eight packets instead of the usual one. The <tt>burst</tt> mode
sends a burst when the server is reachable, while the <tt>
iburst</tt> mode sends a burst when the server is unreachable. Each
mode is independently of the other and both can be used if
necessary. When the server is reachable, the packet spacing is a
random value centered at 2 s for quick response. When the server is
unreachable, the packet spacing is a random value centered at 16 s
in order for a dialup modem to complete a call. Received server
packets update the NTPv4 clock filter, which selects the best (most
accurate) time values. When the last client packet in the burst is
sent, the next received server packet updates the system variables
and sets the system clock in the usual manner, as if only a single
client/server cycle had occurred. The result is not only a rapid
and reliable setting of the system clock, but a considerable
reduction in network jitter.</p>

<p>The <tt>iburst</tt> keyword can be configured for cases where it
is important to set the clock quickly when an association is first
mobilized or first becomes reachable or when the network attachment
requires an initial calling or training procedure. The burst is
initiated only when the server first becomes reachable and results
in good accuracy with intermittent connections typical of PPP and
ISDN services. Outlyers due to initial dial-up delays, etc., are
avoided and the client sets the clock within 30 s after the first
message.</p>

<p>The <tt>burst</tt> keyword can be configured in cases of
excessive network jitter or when the network attachment requires an
initial calling or training procedure. The burst is initiated at
each poll interval when the server is reachable. The burst does
produce additional network overhead and can cause trouble if used
indiscriminately. It should only be used where the poll interval is
expected to settle to values at or above 1024 s.</p>

<hr>
<a href="index.htm"><img align="left" src="pic/home.gif" alt=
"gif"></a> 

<address><a href="mailto:mills@udel.edu">David L. Mills
&lt;mills@udel.edu&gt;</a></address>
</body>
</html>

