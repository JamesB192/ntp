/* -*- Mode: Text -*- */

autogen definitions options;

#include autogen-version.def
#include copyright.def

prog-name      = "sntp";
prog-title     = "standard SNTP program";
homerc         =  $HOME, ".";
argument       = 'hostname-or-IP ...';

long-opts;

config-header  = "config.h";

#ifndef __windows__
rcfile         = ".ntprc";
#else
rcfile         = "ntp.ini";
#endif

environrc;

#include version.def

test-main;

flag = {
    name      = ipv4;
    value     = 4;
    flags-cant = ipv6;
    descrip   = "Force IPv4 DNS name resolution";
    doc = <<-  _EndOfDoc_
	Force DNS resolution of following host names on the command line
	to the IPv4 namespace.
	_EndOfDoc_;
};

flag = {
    name      = ipv6;
    value     = 6;
    flags-cant = ipv4;
    descrip   = "Force IPv6 DNS name resolution";
    doc = <<-  _EndOfDoc_
	Force DNS resolution of following host names on the command line
	to the IPv6 namespace.
	_EndOfDoc_;
};


flag = {
    name      = normalverbose;
    value     = d;
    descrip   = "Normal verbose";
    doc = <<-  _EndOfDoc_
	Diagnostic messages for non-fatal errors and a limited amount of
	tracing should be written to standard error.  Fatal ones always
	produce a diagnostic.  This option should be set when there is a
	suspected problem with the server, network or the source.
	_EndOfDoc_;
};

flag = {
    name      = kod;
    value     = K;
    arg-type  = string;
    descrip   = "KoD history filename";
    doc = <<-  _EndOfDoc_
	Modifies the filename to be used to persist the history of KoD
	responses received from servers.  The default is
	/var/db/ntp-kod.
	_EndOfDoc_;
};


flag = {
	name 	= syslog;
	value	= p;
	flags-cant = filelog;
	descrip = "Logging with syslog";
	doc = <<-  _EndOfDoc_
	When this option is set all logging will be done using syslog.
	_EndOfDoc_;
}; 

flag = {
	name 	= filelog;
	value	= l;
	arg-type  = string;
	flags-cant = syslog;
	descrip = "Logging to specified logfile";
	doc = <<-  _EndOfDoc_
	This option causes the client to write log messages to the specified
	logfile. 
	_EndOfDoc_;
};

flag = {
    name      = settod;
    value     = s;
    flags-cant = adjtime;
    descrip   = "Set (step) the time with settimeofday()";
    doc = <<-  _EndOfDoc_
	_EndOfDoc_;
};

flag = {
    name      = adjtime;
    value     = j;
    flags-cant = settod;
    descrip   = "Set (slew) the time with adjtime()";
    doc = <<-  _EndOfDoc_
	_EndOfDoc_;
};

flag = {
	name 	= broadcast;
	value 	= b;
	descrip	= "Use broadcasts to the address specified for synchronisation";
	arg-type = string;
	doc 	= <<-  _EndOfDoc_
	If specified SNTP will listen for NTP broadcasts to the
	specified broadcast address.  The default maximum wait time,
	68 seconds, can be modified with -t.
	_EndOfDoc_;
};

flag = {
	name 	= timeout;
	value 	= t;
	descrip	= "Specify the number of seconds to wait for broadcasts";
	arg-type = number;
	doc	= <<-  _EndOfDoc_
	When waiting for a broadcast packet SNTP will wait the number 
	of seconds specified before giving up.  Default 68 seconds.
	_EndOfDoc_;
};

flag = {
	name 	= authentication;
	value	= a;
	descrip	= "Enable authentication with the key keyno. This option is used as -a keyno";
	arg-type = number;
	doc	= <<- _EndOfDoc_
	This option enables authentication using the key specified in this option\'s argument.
	The argument of this option is the keyid, a number specified in the keyfile as this
	key\'s identifier. See the keyfile option -k for more details.
	_EndOfDoc_;
};

flag = {
	name 	= keyfile;
	value	= k;
	descrip	= "Specify a keyfile. SNTP will look in this file for the key specified with -a";
	arg-type = string;
	doc	= <<-  _EndOfDoc_
	This option specifies the keyfile. SNTP will search for the key specified with -a keyno in this 
	file. Key files follow the following format:

	keyid keytype key

	Where 	keyid is a number identifying this key
		keytype is one of the follow:
			S  Key in 64 Bit hexadecimal number as specified in in the DES specification.
			N  Key in 64 Bit hexadecimal number as specified in the NTP standard.
			A  Key in a 1-to-8 character ASCII string.
			M  Key in a 1-to-8 character ASCII string using the MD5 authentication scheme.

	For more information see ntp.keys(5).
	_EndOfDoc_;
};

		


detail = <<-  _END_DETAIL
.I sntp
implements the Simple Network Time Protocol, and is used
to query an NTP or SNTP server and either
display the time
or
set the local system's time (given suitable privilege).
It can be
run interactively from the command line or as a
.I cron
job.

NTP and SNTP are defined by draft-ietf-ntp-ntpv4-proto-11, which
obsoletes RFC 4330 and RFC 1305.
	_END_DETAIL;

prog-man-descrip = <<-  _END_PROG_MAN_DESCRIP
.I sntp
can be used as a SNTP client to query a NTP or SNTP server and either display
the time or set the local system's time (given suitable privilege).  It can be
run as an interactive command or in a
.I cron
job.
NTP is the Network Time Protocol (RFC 1305) and SNTP is the
Simple Network Time Protocol (RFC 2030, which supersedes RFC 1769).
.SS Options
.PP
.I sntp
recognizes the following options:
.TP
.B \-v
indicates that diagnostic messages for non-fatal errors and a limited amount of
tracing should be written to standard error.  Fatal ones always produce a
diagnostic.  This option should be set when there is a suspected problem with
the server, network or the source.
.TP
.B \-V
requests more and less comprehensible output, mainly for investigating problems
with apparently inconsistent timestamps.  This option should be set when the
program fails with a message indicating that is the trouble.
.TP
.B \-W
requests very verbose debugging output, and will interfere with the timing
when writing to the terminal (because of line buffered output from C).  Note
that the times produced by this are the corrections needed, and not the error
in the local clock.  This option should be set only when debugging the source.
.TP
.B \-r
indicates that the system clock should be reset by
.IR settod .
Naturally, this will work only if the user has enough privilege.
.TP
.B \-a
indicates that the system clock should be reset by
.IR adjtime .
Naturally, this will work only if the user has enough privilege.
.PP
The default is to write the estimated correct local date and time (i.e. not
UTC) to the standard output in a format like
.BR "'1996 Oct 15 20:17:25.123 + 4.567 +/- 0.089 secs'" ,
where the
.B "'+ 4.567 +/- 0.089 secs'"
indicates the estimated error in the time on the local system.
.TP
.BI \-l " lockfile"
sets the name of the lock file to ensure that there is only
one copy of
.I sntp
running at once.  The default is installation-dependent, but will usually be
.IR /etc/sntp.pid .
.TP
.BI \-c " count"
sets the maximum number of NTP packets required to
.IR count .
Acceptable values are from 1 to 25 if a NTP host is specified and from 5 to 25
otherwise, and the default is 5.  If the maximum isn't enough, the system needs
a better consistency algorithm than this program uses.
.TP
.B -4
force IPv4 DNS resolution.
.TP
.B -6
force IPv6 DNS resolution.
.PP
.B address(es)
are the DNS names or IP numbers of hosts to use for the challenge and response
protocol; if no names are given, the program waits for broadcasts.  Polling a
server is vastly more reliable than listening to broadcasts.  Note that a
single component numeric address is not allowed, to avoid ambiguities.  If
more than one name is give, they will be used in a round-robin fashion.
.PP
Constraints:
.IP
.BR delay / count "),"
and
.B count
must be less than half of
.BR delay .
.IP
In update mode,
.B maxerr
must be less than
.SH USAGE
The simplest use of this program is as an unprivileged command to check the
current time and error in the local clock.  For example:
.IP
.B sntp ntpserver.somewhere
.PP
With suitable privilege, it can be run as a command or in a
.I cron
job to reset the local clock from a reliable server, like the
.I ntpdate
and
.I rdate
commands.  For example:
.IP
.B sntp -a ntpserver.somewhere
.SH RETURN VALUE
The program returns a zero exit
status for success, and a non-zero one otherwise.
.SH BUGS
Please report bugs to http://bugs.ntp.org .
	_END_PROG_MAN_DESCRIP;
