NULL =
BUILT_SOURCES =
CLEANFILES =

run_unity =	cd $(srcdir) && ruby ../../sntp/unity/auto/generate_test_runner.rb

check_PROGRAMS = 		\
	test-networking		\
	test-kodDatabase
	$(NULL)
#	test-keyFile

if GTEST_AVAILABLE
check_PROGRAMS += tests
else
EXTRA_PROGRAMS = tests
endif

#if BUILD_SNTP
#check_PROGRAMS += tests
#endif

base_SOURCES =				\
	$(srcdir)/../tests_main.cpp	\
	$(NULL)

tests_SOURCES =			\
	$(base_SOURCES)		\
	crypto.cpp		\
	keyFile.cpp		\
	g_kodDatabase.cpp		\
	kodFile.cpp		\
	g_networking.cpp		\
	packetHandling.cpp	\
	packetProcessing.cpp	\
	utilities.cpp		\
	$(NULL)

noinst_HEADERS =		\
	sntptest.h		\
	c_sntptest.h		\
	fileHandlingTest.h	\
	c_fileHandlingTest.h	\
	$(NULL)

dist_check_SCRIPTS =	tests-runner

EXTRA_DIST =				\
	data/debug-input-lfp-bin	\
	data/debug-input-lfp-dec	\
	data/debug-input-pkt		\
	data/key-test-ascii		\
	data/key-test-comments		\
	data/key-test-empty		\
	data/key-test-hex		\
	data/key-test-invalid-hex	\
	data/kod-expected-multiple	\
	data/kod-expected-single	\
	data/kod-test-blanks		\
	data/kod-test-correct		\
	data/kod-test-empty		\
	$(NULL)

CLEANFILES =				\
	data/kod-output-multiple	\
	data/kod-output-single		\
	data/debug-output-pkt		\
	data/debug-output-lfp-dec	\
	data/kod-output-blank		\
	data/debug-output-lfp-bin	\
	$(NULL)

#split into LDADD and tests_LDADD?
LDADD =						\
	../libsntp.a				\
	$(LIBOPTS_LDADD)			\
	$(LDADD_LIBEVENT)			\
	$(top_builddir)/../libntp/libntp.a	\
	$(LDADD_LIBNTP)				\
	$(LDADD_NTP)				\
	$(GTEST_LDFLAGS)			\
	$(GTEST_LIBS)				\
	$(NULL)

unity_tests_LDADD =				\
	$(LDADD)				\
	$(top_builddir)/unity/libunity.a	\
	$(NULL)

AM_CFLAGS   = $(CFLAGS_NTP)
AM_CXXFLAGS = $(GTEST_CXXFLAGS)

AM_CPPFLAGS  = $(SNTP_INCS)
AM_CPPFLAGS += -I$(srcdir)/..
AM_CPPFLAGS += -I$(top_srcdir)/../tests
AM_CPPFLAGS += $(LIBOPTS_CFLAGS)
AM_CPPFLAGS += $(CPPFLAGS_LIBEVENT)
AM_CPPFLAGS += $(GTEST_CPPFLAGS)
AM_CPPFLAGS += $(CPPFLAGS_NTP)

AM_LDFLAGS = $(LDFLAGS_NTP)


test_networking_CFLAGS =			\
	-I$(top_srcdir)/unity			\
	$(NULL)

test_networking_LDADD =				\
	$(unity_tests_LDADD)			\
	$(NULL)

test_kodDatabase_CFLAGS =		\
	-I$(top_srcdir)/unity		\
	$(NULL)

test_kodDatabase_LDADD =			\
	$(unity_tests_LDADD)			\
	$(NULL)

test_keyFile_CFLAGS =			\
	-I$(top_srcdir)/unity		\
	$(NULL)

test_keyFile_LDADD =			\
	$(unity_tests_LDADD)		\
	$(NULL)

BUILT_SOURCES +=					\
	$(srcdir)/networking.c run-test-networking.c	\
	$(srcdir)/kodDatabase.c run-test-kodDatabase.c	\
	$(srcdir)/run-test-keyFile.c			\
	$(NULL)

test_networking_SOURCES =		\
	networking.c			\
	run-test-networking.c		\
	$(NULL)

test_kodDatabase_SOURCES =		\
	kodDatabase.c			\
	run-test-kodDatabase.c		\
	../version.c			\
	$(NULL)

test_keyFile_SOURCES =			\
	keyFile.c			\
	run-test-keyFile.c		\
	$(NULL)

$(srcdir)/run-test-networking.c: $(srcdir)/networking.c $(std_unity_list)
	$(run_unity) networking.c run-test-networking.c

$(srcdir)/run-test-kodDatabase.c: $(srcdir)/kodDatabase.c $(std_unity_list)
	$(run_unity) kodDatabase.c run-test-kodDatabase.c

#$(srcdir)/../version.c: $(srcdir)/../version.c
#	gcc -o version.o ../version.c

$(srcdir)/run-test-keyFile.c: $(srcdir)/keyFile.c $(std_unity_list)
	$(run_unity) keyFile.c run-test-keyFile.c

TESTS = 

if !NTP_CROSSCOMPILE
TESTS += $(check_PROGRAMS)
endif
#if !NTP_CROSSCOMPILE
#TESTS += tests-runner
#endif

## ensure ../libsntp.a is built

BUILT_SOURCES	+= check-libsntp
CLEANFILES	+= check-libsntp

check-libsntp: ../libsntp.a
	@echo stamp > $@

../libsntp.a:
	cd .. && $(MAKE) $(AM_MAKEFLAGS) libsntp.a

## check-libntp.mf - automake fragment
## slightly adapted for deeper directory

BUILT_SOURCES	+= check-libntp check-libunity
CLEANFILES	+= check-libntp	check-libunity

check-libntp: ../../libntp/libntp.a
	@echo stamp > $@

../../libntp/libntp.a:
	cd ../../libntp && $(MAKE) $(AM_MAKEFLAGS) libntp.a

check-libunity: ../sntp/unity/libunity.a
	@echo stamp > $@

../sntp/unity/libunity.a:
	cd ../unity && $(MAKE) $(AM_MAKEFLAGS) libunity.a

include $(top_srcdir)/depsver.mf
include $(top_srcdir)/includes.mf
